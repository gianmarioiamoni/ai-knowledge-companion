#!/bin/sh
#
# Pre-commit hook to prevent committing sensitive files
#

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check for sensitive files
sensitive_files=".env.local .env.development.local .env.production.local"
found_sensitive=false

for file in $sensitive_files; do
    if git diff --cached --name-only | grep -q "^$file$"; then
        echo "${RED}ERROR: Attempting to commit sensitive file: $file${NC}"
        found_sensitive=true
    fi
done

# Check for potential API keys in staged files
if git diff --cached | grep -i -E "(api_key|secret_key|private_key|password)" | grep -v "your_" | grep -v "example" | grep -v "template"; then
    echo "${YELLOW}WARNING: Potential API keys or secrets found in staged changes${NC}"
    echo "Please review the changes and ensure no real credentials are being committed."
    echo ""
fi

# Exit with error if sensitive files found
if [ "$found_sensitive" = true ]; then
    echo ""
    echo "${RED}Commit blocked to protect sensitive information.${NC}"
    echo "These files should never be committed:"
    echo "- .env.local (development secrets)"
    echo "- .env.development.local (development secrets)"
    echo "- .env.production.local (production secrets)"
    echo ""
    echo "Use 'env.example' to document required environment variables."
    exit 1
fi

exit 0
